import asyncio
import logging

from aiogram import Bot, Dispatcher
from aiogram.types import BotCommand, BotCommandScopeDefault
from aiogram.client.session.aiohttp import AiohttpSession
from aiogram.client.bot import DefaultBotProperties

from src.services.supabase_client import init_supabase
from src.handlers import basic, team_management, message_ingestion, qa_session
from src.settings import settings

async def main():
    # Bot and Dispatcher setup
    logging.basicConfig(level=logging.INFO)
    bot = Bot(
        token=settings.bot_token.get_secret_value(),
        default=DefaultBotProperties(parse_mode="HTML")
    )
    dp = Dispatcher()

    # Include routers
    dp.include_router(basic.router)
    dp.include_router(team_management.router)
    dp.include_router(message_ingestion.router)
    dp.include_router(qa_session.router)

    # --- Bot commands ---
    commands = [
        BotCommand(command="start", description="üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand(command="help", description="‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"),
        BotCommand(command="create_team", description="üåü –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É"),
        BotCommand(command="join_team", description="ü§ù –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ"),
        BotCommand(command="my_teams", description="üë• –ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã"),
        BotCommand(command="link_chat", description="üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å —á–∞—Ç –∫ –∫–æ–º–∞–Ω–¥–µ"),
        BotCommand(command="set_system_message", description="‚úçÔ∏è –ó–∞–¥–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"),
        BotCommand(command="test_pinecone", description="üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å Pinecone (–∞–¥–º–∏–Ω—ã)"),
    ]
    await bot.set_my_commands(commands, BotCommandScopeDefault())

    # Initialize external services
    init_supabase()

    # Start polling
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logging.info("Bot stopped!")

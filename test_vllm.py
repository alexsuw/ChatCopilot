#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è vLLM —Å–µ—Ä–≤–µ—Ä–∞
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.services.llm import check_vllm_health, test_vllm_simple, get_answer


async def main():
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ vLLM —Å–µ—Ä–≤–µ—Ä–∞...")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    health_info = await check_vllm_health()
    print(f"   URL: {health_info['url']}")
    print(f"   –ú–æ–¥–µ–ª—å: {health_info['model']}")
    print(f"   –°—Ç–∞—Ç—É—Å: {health_info['status']}")
    print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {health_info['message']}")
    
    if health_info['status'] != 'healthy':
        print("‚ùå vLLM —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
        return
    
    # 2. –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
    print("\n2Ô∏è‚É£ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...")
    simple_answer = await test_vllm_simple()
    print(f"   –û—Ç–≤–µ—Ç: {simple_answer}")
    
    # 3. –¢–µ—Å—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º...")
    context = """
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ò–≤–∞–Ω: –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! –ö–∞–∫ –¥–µ–ª–∞ —Å –ø—Ä–æ–µ–∫—Ç–æ–º?
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ú–∞—Ä–∏—è: –ü—Ä–∏–≤–µ—Ç! –†–∞–±–æ—Ç–∞—é –Ω–∞–¥ API, –¥–æ–ª–∂–Ω–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—å –∫ –≤–µ—á–µ—Ä—É.
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ê–ª–µ–∫—Å–µ–π: –Ø –∑–∞–Ω–∏–º–∞—é—Å—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º, –ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤.
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ò–≤–∞–Ω: –û—Ç–ª–∏—á–Ω–æ! –¢–æ–≥–¥–∞ –∑–∞–≤—Ç—Ä–∞ –º–æ–∂–µ–º –¥–µ–ª–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é.
    """
    question = "–ù–∞–¥ —á–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–º–∞–Ω–¥–∞?"
    
    answer = await get_answer(context, question)
    print(f"   –í–æ–ø—Ä–æ—Å: {question}")
    print(f"   –û—Ç–≤–µ—Ç: {answer}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    asyncio.run(main()) 